$crp--output: false !default;

@import "css-recipe-math/index";

////
// Ribbon effect
// Transform an element to a "ribbon"
// For now ribbon in corner is the only one available
//
// @author Maxime Thirouin m@moox.io @MoOx
///
@mixin crp-CornerRibbon(
	$position: 'top right',
	$width: 10em,
	$height: 2em,
	$lines: 1,
	$skin: 'classic',
	$width-add: 0,
	$height-add: 0,
	$offset-v: 0,
	$offset-h: 0
) {
	position: absolute;
	text-align: center;
	
	box-sizing: border-box;

	width: $width;
	height: $height;
	line-height: $height / $lines;

	// @if ($position == top left)
	$position-v: top;
	$position-h: left;
	$angle: -45deg;
	$transform-origin-x: 0;
	$transform-origin-y: 100%;

	@if ($position == 'top right') {
		//$position-v: top;
		$position-h: right;
		$angle: 45deg;
		$transform-origin-x: 100%;
		//$transform-origin-y: 100%;
	}
	@else if ($position == 'bottom right') {
		$position-v: bottom;
		$position-h: right;
		//$angle: -45deg
		$transform-origin-x: 100%;
		$transform-origin-y: 0;
	}
	@else if ($position == 'bottom left') {
		$position-v: bottom;
		//$position-h: left;
		$angle: 45deg;
		//$transform-origin-x: 0;
		$transform-origin-y: 0;
	}

	@if ($skin == 'classic') {
		@extend %crp-CornerRibbon--classic;
		// skin border size to remove;
		$width-add: .1em;
		$height-add: .1em;
	}
	//@elseif ($skin == 'github') {
	//    @extend %crp-CornerRibbon--github;
	//}

	// here is the awesome trick !
	$value: crp-Math-pow($width + $width-add, 2) / 2 ;
	// strip unit
	$value: $value / ($value * 0 + 1);
	#{$position-v}: crp-Math-sqrt($value) - $height - $height-add + $offset-v;
	#{$position-h}: 0 + $offset-h;

	transform: rotate($angle);
	transform-origin: $transform-origin-x $transform-origin-y 0;
}

%crp-CornerRibbon {
	@include crp-CornerRibbon();
}

%crp-CornerRibbon--classic {
	$color: #fff;
	$border-width: 1px;
	$border-color: #631a15;
	$border-dot-subcolor: #da5050;
	$border-dot-offset: 3px;

	color: $color;
	text-shadow: 0 1px 0 rgba(#000, .8);

	border: $border-width solid $border-color;

	background: rgb(199,59,60); //fallback
	background: linear-gradient(rgb(199,59,60),rgb(184,32,31));
	box-shadow: 0 .2em .6em rgba(#000, .6);

	// todo replace this use of pseudo elements by appropriate backgrounds properties (tricky gradients)
	&:before,
	&:after {
		display: block;
		position: absolute;
		content: "";
		width: 100%;
		height: 0;
		border: $border-width dashed;
		border-left: 0;
		border-right: 0;
		border-top-color: $border-color;
		border-bottom-color: $border-dot-subcolor;
	}

	&:before { top: $border-dot-offset; }
	&:after { bottom: $border-dot-offset - $border-width *2; }
}

// @todo ?
//%crp-CornerRibbon--github {
//
//}

@if ($crp--output) {
	.crp-CornerRibbon {
		@extend %crp-CornerRibbon;
	}
}